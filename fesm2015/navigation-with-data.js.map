{"version":3,"file":"navigation-with-data.js.map","sources":["ng://navigation-with-data/lib/navigation-with-data.service.ts","ng://navigation-with-data/lib/navigation-with-data.component.ts","ng://navigation-with-data/lib/navigation-with-data.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationWithDataService {\n  public data = {};\n  pages = [];\n  constructor(public router: Router) { }\n\n  get(value) {\n    return this.data[value];\n  }\n\n  push(page, data={}) {\n    this.data = data;\n    this.pages.push({page, data});\n    this.router.navigate([page]);\n  }\n}\n","import { NavigationWithDataService } from './navigation-with-data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-navigation-with-data',\n  template: `\n    <p>\n      navigation-with-data works!\n    </p>\n  `,\n  styles: []\n})\nexport class NavigationWithDataComponent implements OnInit {\n  constructor(public navCtrl: NavigationWithDataService) { }\n\n  ngOnInit() {\n  }\n\n\n/**\n * get(params) method\n * params : 1. Key of previous page data\n * For getting the data of previous pagem eg: 'name'\n * returns the value at data object from previous page if any else return undefined\n */\n  public get(key) {\n    return this.navCtrl.get(key);\n  }\n\n/**\n * data() method\n * returns the whole data object of previouse page if any else undefined\n * For getting the data of previous pagem eg: 'name'\n */\n  public get data(){\n    return this.navCtrl.data;\n  }\n  \n  /**\n   * navigate(params) method\n   * params : 1. Name of route path at app-routing.module.ts\n   * params : 2. Data to be send to next page eg : {name:\"Virendra\", lastName:\"Yadav\"}\n   */\n  public navigate(page, data) {\n    this.navCtrl.push(page, data);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NavigationWithDataComponent } from './navigation-with-data.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NavigationWithDataComponent],\n  exports: [NavigationWithDataComponent]\n})\nexport class NavigationWithDataModule { }\n"],"names":[],"mappings":";;;;;;;AAAA;;;;IASE,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;oBAFnB,EAAE;qBACR,EAAE;KAC4B;;;;;IAEtC,GAAG,CAAC,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;;;;;;IAED,IAAI,CAAC,IAAI,EAAE,IAAI,GAAC,EAAE;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KAC9B;;;YAhBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAJQ,MAAM;;;;;;;;ACDf;;;;IAaE,YAAmB,OAAkC;QAAlC,YAAO,GAAP,OAAO,CAA2B;KAAK;;;;IAE1D,QAAQ;KACP;;;;;;;;;IASM,GAAG,CAAC,GAAG;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;;;;;;;QAQpB,IAAI;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;;;;;;;;;IAQpB,QAAQ,CAAC,IAAI,EAAE,IAAI;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;;YAzCjC,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE;;;;GAIT;gBACD,MAAM,EAAE,EAAE;aACX;;;;YAXQ,yBAAyB;;;;;;;ACAlC;;;YAGC,QAAQ,SAAC;gBACR,OAAO,EAAE,EACR;gBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;gBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;aACvC;;;;;;;;;;;;;;;"}
